//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPF_Calc.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Data", ReplyAction="http://tempuri.org/IService1/DataResponse")]
        string Data();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Data", ReplyAction="http://tempuri.org/IService1/DataResponse")]
        System.Threading.Tasks.Task<string> DataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addDigit", ReplyAction="http://tempuri.org/IService1/addDigitResponse")]
        void addDigit(char digit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addDigit", ReplyAction="http://tempuri.org/IService1/addDigitResponse")]
        System.Threading.Tasks.Task addDigitAsync(char digit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Back", ReplyAction="http://tempuri.org/IService1/BackResponse")]
        void Back();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Back", ReplyAction="http://tempuri.org/IService1/BackResponse")]
        System.Threading.Tasks.Task BackAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Clear", ReplyAction="http://tempuri.org/IService1/ClearResponse")]
        void Clear();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Clear", ReplyAction="http://tempuri.org/IService1/ClearResponse")]
        System.Threading.Tasks.Task ClearAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Reset", ReplyAction="http://tempuri.org/IService1/ResetResponse")]
        void Reset();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Reset", ReplyAction="http://tempuri.org/IService1/ResetResponse")]
        System.Threading.Tasks.Task ResetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Comma", ReplyAction="http://tempuri.org/IService1/CommaResponse")]
        void Comma();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Comma", ReplyAction="http://tempuri.org/IService1/CommaResponse")]
        System.Threading.Tasks.Task CommaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Sign", ReplyAction="http://tempuri.org/IService1/SignResponse")]
        void Sign();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Sign", ReplyAction="http://tempuri.org/IService1/SignResponse")]
        System.Threading.Tasks.Task SignAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Oper", ReplyAction="http://tempuri.org/IService1/OperResponse")]
        void Oper([System.ServiceModel.MessageParameterAttribute(Name="oper")] char oper1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Oper", ReplyAction="http://tempuri.org/IService1/OperResponse")]
        System.Threading.Tasks.Task OperAsync(char oper);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Equality", ReplyAction="http://tempuri.org/IService1/EqualityResponse")]
        void Equality();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Equality", ReplyAction="http://tempuri.org/IService1/EqualityResponse")]
        System.Threading.Tasks.Task EqualityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Sqrt", ReplyAction="http://tempuri.org/IService1/SqrtResponse")]
        void Sqrt();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Sqrt", ReplyAction="http://tempuri.org/IService1/SqrtResponse")]
        System.Threading.Tasks.Task SqrtAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Inverse", ReplyAction="http://tempuri.org/IService1/InverseResponse")]
        void Inverse();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Inverse", ReplyAction="http://tempuri.org/IService1/InverseResponse")]
        System.Threading.Tasks.Task InverseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Percent", ReplyAction="http://tempuri.org/IService1/PercentResponse")]
        void Percent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Percent", ReplyAction="http://tempuri.org/IService1/PercentResponse")]
        System.Threading.Tasks.Task PercentAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WPF_Calc.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WPF_Calc.ServiceReference1.IService1>, WPF_Calc.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Data() {
            return base.Channel.Data();
        }
        
        public System.Threading.Tasks.Task<string> DataAsync() {
            return base.Channel.DataAsync();
        }
        
        public void addDigit(char digit) {
            base.Channel.addDigit(digit);
        }
        
        public System.Threading.Tasks.Task addDigitAsync(char digit) {
            return base.Channel.addDigitAsync(digit);
        }
        
        public void Back() {
            base.Channel.Back();
        }
        
        public System.Threading.Tasks.Task BackAsync() {
            return base.Channel.BackAsync();
        }
        
        public void Clear() {
            base.Channel.Clear();
        }
        
        public System.Threading.Tasks.Task ClearAsync() {
            return base.Channel.ClearAsync();
        }
        
        public void Reset() {
            base.Channel.Reset();
        }
        
        public System.Threading.Tasks.Task ResetAsync() {
            return base.Channel.ResetAsync();
        }
        
        public void Comma() {
            base.Channel.Comma();
        }
        
        public System.Threading.Tasks.Task CommaAsync() {
            return base.Channel.CommaAsync();
        }
        
        public void Sign() {
            base.Channel.Sign();
        }
        
        public System.Threading.Tasks.Task SignAsync() {
            return base.Channel.SignAsync();
        }
        
        public void Oper(char oper1) {
            base.Channel.Oper(oper1);
        }
        
        public System.Threading.Tasks.Task OperAsync(char oper) {
            return base.Channel.OperAsync(oper);
        }
        
        public void Equality() {
            base.Channel.Equality();
        }
        
        public System.Threading.Tasks.Task EqualityAsync() {
            return base.Channel.EqualityAsync();
        }
        
        public void Sqrt() {
            base.Channel.Sqrt();
        }
        
        public System.Threading.Tasks.Task SqrtAsync() {
            return base.Channel.SqrtAsync();
        }
        
        public void Inverse() {
            base.Channel.Inverse();
        }
        
        public System.Threading.Tasks.Task InverseAsync() {
            return base.Channel.InverseAsync();
        }
        
        public void Percent() {
            base.Channel.Percent();
        }
        
        public System.Threading.Tasks.Task PercentAsync() {
            return base.Channel.PercentAsync();
        }
    }
}
